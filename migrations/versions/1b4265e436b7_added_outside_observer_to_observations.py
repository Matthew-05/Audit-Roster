"""Added outside observer to observations

Revision ID: 1b4265e436b7
Revises: 946656acc57f
Create Date: 2024-10-16 16:34:58.028708

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector

# revision identifiers, used by Alembic.
revision = '1b4265e436b7'
down_revision = '946656acc57f'
branch_labels = None
depends_on = None


def upgrade():
    # Create an Inspector
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    
    # Check if the column already exists
    columns = inspector.get_columns('observation')
    if 'outside_observer' not in [c['name'] for c in columns]:
        with op.batch_alter_table('observation', schema=None) as batch_op:
            batch_op.add_column(sa.Column('outside_observer', sa.String(length=200), nullable=True))
    else:
        print("Column 'outside_observer' already exists in 'observation' table. Skipping...")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('version_info', schema=None) as batch_op:
        batch_op.alter_column('version',
               existing_type=sa.String(length=10),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('observation', schema=None) as batch_op:
        batch_op.drop_column('outside_observer')

    # ### end Alembic commands ###
